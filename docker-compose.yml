version: "3.9"

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rt-rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    entrypoint:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
  service_a:
    build:
      context: .
      dockerfile: Dockerfile.service_a
    container_name: rt-service-a
    depends_on:
      - rabbitmq
    environment:
      LOG_DIR: /app/logs
      LOG_LEVEL: INFO
    volumes:
      - ./logs/service_a:/app/logs
      - ./certs:/certs:ro
    ports:
      - "8444:8444"
  service_b:
    build:
      context: .
      dockerfile: Dockerfile.service_b
    container_name: rt-service-b
    depends_on:
      - rabbitmq
    environment:
      LOG_DIR: /app/logs
      LOG_LEVEL: INFO
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/
      RABBITMQ_EXCHANGE: tasks
      QUEUE_TASK_CREATE: task.create
      QUEUE_TASK_RESULT: task.result
    volumes:
      - ./logs/service_b:/app/logs
      - ./certs:/certs:ro
    ports:
      - "8443:8443"
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: rt-worker
    depends_on:
      - rabbitmq
      - service_a
    environment:
      LOG_DIR: /app/logs
      LOG_LEVEL: INFO
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/
      RABBITMQ_EXCHANGE: tasks
      QUEUE_TASK_CREATE: task.create
      QUEUE_TASK_RESULT: task.result
      SERVICE_A_URL: https://service_a:8444
      A_VERIFY_TLS: "false"
      REQUEST_TIMEOUT_BUFFER: "5"
      WORKER_CONCURRENCY: "5"
      MAX_RETRIES: "3"
      BACKOFF_BASE: "1"
    volumes:
      - ./logs/worker:/app/logs